<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on Harley</title>
    <link>https://harleylau.github.io/categories/redis/</link>
    <description>Recent content in Redis on Harley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jan 2019 16:46:31 +0800</lastBuildDate>
    
	<atom:link href="https://harleylau.github.io/categories/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Redis SETNX 命令实现分布式锁</title>
      <link>https://harleylau.github.io/2019/01/%E4%BD%BF%E7%94%A8redis-setnx-%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Tue, 01 Jan 2019 16:46:31 +0800</pubDate>
      
      <guid>https://harleylau.github.io/2019/01/%E4%BD%BF%E7%94%A8redis-setnx-%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description>&lt;p&gt;使用Redis的 SETNX 命令可以实现分布式锁，本文介绍其实现方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis源码剖析-Dict字典</title>
      <link>https://harleylau.github.io/2017/07/redis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-dict%E5%AD%97%E5%85%B8/</link>
      <pubDate>Mon, 31 Jul 2017 16:36:53 +0800</pubDate>
      
      <guid>https://harleylau.github.io/2017/07/redis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-dict%E5%AD%97%E5%85%B8/</guid>
      <description>&lt;p&gt;改换一下策略，不直接介绍源码，打算先整体介绍一下思路，然后再根据源码解释具体的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis源码剖析-链表list</title>
      <link>https://harleylau.github.io/2017/07/redis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E9%93%BE%E8%A1%A8list/</link>
      <pubDate>Mon, 31 Jul 2017 12:15:30 +0800</pubDate>
      
      <guid>https://harleylau.github.io/2017/07/redis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90-%E9%93%BE%E8%A1%A8list/</guid>
      <description>&lt;p&gt;Redis另一个基础的数据结构是链表，C并没有内置的链表结构，因此Redis自己实现了一个列表。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis源码剖析–简单动态字符串sds</title>
      <link>https://harleylau.github.io/2017/07/redis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2sds/</link>
      <pubDate>Fri, 28 Jul 2017 16:14:49 +0800</pubDate>
      
      <guid>https://harleylau.github.io/2017/07/redis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2sds/</guid>
      <description>&lt;p&gt;Redis 没有直接使用 C 语言传统的字符串表示， 而是自己构建了一种名为简单动态字符串（simple dynamic string，SDS）的抽象类型， 并将 SDS 用作 Redis 的默认字符串表示。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>